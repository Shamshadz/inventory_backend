# Generated by Django 3.2.9 on 2023-08-27 12:07

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import store.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='DashBoardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('quantity', models.PositiveBigIntegerField(default=1)),
                ('sold_to', models.CharField(blank=True, max_length=1024, null=True)),
                ('sold_at', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DelayTranscation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1024)),
                ('description', models.CharField(blank=True, max_length=1023)),
                ('amount', models.IntegerField(blank=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('is_pending', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('location', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='MedDashBoardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=1024, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('quantity', models.PositiveBigIntegerField(default=1)),
                ('sold_at', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicineCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=1024, verbose_name='medicine_category')),
            ],
        ),
        migrations.CreateModel(
            name='MedLocationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('location', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='VCompanyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vcompany_name', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_name', models.CharField(max_length=1024)),
                ('vcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vCompany', to='store.vcompanymodel')),
            ],
        ),
        migrations.CreateModel(
            name='MedicineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Medicine Name')),
                ('manufacturer', models.CharField(max_length=1024, verbose_name='Manufacturer')),
                ('description', models.TextField(max_length=1024, verbose_name='Description or Ingredient')),
                ('price', models.PositiveIntegerField(verbose_name='Medicine Price')),
                ('customer_price', models.PositiveIntegerField(null=True, verbose_name='Customer Selling Price')),
                ('quantity', models.PositiveBigIntegerField(verbose_name='Quantity')),
                ('quantity_limit', models.IntegerField(default=2)),
                ('location', models.CharField(max_length=1024, verbose_name='Rack Location Medicine')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.medicinecategorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='ItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, max_length=1024, unique=True)),
                ('description', models.CharField(max_length=1024)),
                ('location', models.CharField(max_length=1024)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('quantity_limit', models.IntegerField(default=2)),
                ('MRP', models.CharField(max_length=1024)),
                ('mech_selling_pr', models.CharField(max_length=1024)),
                ('cust_selling_pr', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company', to='store.companymodel')),
                ('vehicle_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='store.vehiclemodel')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('profile_pic', models.ImageField(default='profile/default_profile.jpg', upload_to=store.models.User.get_update_filename)),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid phone number', regex='^\\+?1?\\d{9,15}$')])),
                ('name', models.CharField(max_length=1024, verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
